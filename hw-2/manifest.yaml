apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    service: db-volume
  name: db-volume
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    service: app-config
  name: app-config
data:
  DB_DRIVER: "org.postgresql.Driver"
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    service: db-config
  name: db-config
data:
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "password"
  POSTGRES_DB: "mydatabase"
  POSTGRES_URL: "jdbc:postgresql://db:5432/mydatabase"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: db
  name: db
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    service: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      service: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        network/hw-2-default: "true"
        service: db
    spec:
      containers:
        - env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: db-config
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: db-config
          image: navjig/db:cloud-computing
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
                - -d
                - $POSTGRES_DB
            failureThreshold: 3
            periodSeconds: 3
            timeoutSeconds: 3
          name: db
          ports:
            - containerPort: 5432
              hostPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-volume
      restartPolicy: Always
      volumes:
        - name: db-volume
          persistentVolumeClaim:
            claimName: db-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: app
  name: app
spec:
  selector:
    service: app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30012
      name: http
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      service: app
  template:
    metadata:
      labels:
        network/hw-2-default: "true"
        service: app
    spec:
      containers:
        - name: app
          image: navjig/app:cloud-computing
          env:
            - name: DB_DRIVER
              valueFrom:
                configMapKeyRef:
                  key: DB_DRIVER
                  name: app-config
            - name: DB_URL
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_URL
                  name: db-config
            - name: DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: db-config
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: db-config
          ports:
            - containerPort: 8080
              hostPort: 8080
              protocol: TCP
      restartPolicy: Always
