volumes:
  pgdata:
services:
  app:
    build:
      context: app
      dockerfile: Dockerfile
    environment:
      DB_DRIVER: "org.postgresql.Driver"
      DB_URL: "jdbc:postgresql://db:5432/${POSTGRES_DB:?PostgreSQL DB name not provided}"
      DB_USERNAME: "postgres"
      DB_PASSWORD: "${POSTGRES_PASSWORD:?PostgreSQL DB password not provided}"
    healthcheck:
      test: "curl --fail app:8080/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16.2-bookworm
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d ${POSTGRES_DB:?}'"]
      interval: 3s
      timeout: 3s
      retries: 3
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:?}"
      POSTGRES_DB: "${POSTGRES_DB:?}"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  db-insert:
    build:
      context: db-insert
      dockerfile: Dockerfile
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:?}"
      POSTGRES_DB: "${POSTGRES_DB:?}"
    command: "bash -c 'PGPASSWORD=${POSTGRES_PASSWORD:?} psql -h db -U postgres -d ${POSTGRES_DB:?} -f /insert.sql'"
    depends_on:
      app:
        condition: service_healthy
    profiles:
      - init
